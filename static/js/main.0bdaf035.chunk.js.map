{"version":3,"sources":["img/banner_img.jpeg","Banner.js","MovieRow.js","MovieSection.js","MainScreen.js","PreviewScreen.js","img/Logo_FHD.png","Logo.js","SideBar.js","Player.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","Container","fluid","className","Row","Col","md","src","MovieRow","title","movie_list","console","log","map","to","pathname","movieDetails","sdPosterUrl","alt","id","MovieSection","useState","categories","setCategories","useEffect","a","axios","get","request","data","fetchData","episodes","filter","item","isSeries","movies","series","MainScreen","PreviewScreen","obj","useLocation","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","secondsToTime","length","setEpisodes","episodeList","episodeRow","style","backgroundImage","hdPosterUrl","backgroundPosition","backgroundSize","backgroundRepeat","h","m","genres","description","movieUrl","url","size","Logo","logo","SideBar","Player","autoPlay","progress","controls","App","position","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bdaf035.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner_img.f8d19e39.jpeg\";","import React, {useState,useEffect} from 'react'\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\nimport bg from './img/banner_img.jpeg'; \r\nimport './index.css'\r\nimport axios from 'axios';\r\n\r\nfunction Banner() {\r\n    // const [banner, setBanner]=useState([]);\r\n    // useEffect(()=>{\r\n    //     async function fetchData(){\r\n    //         // http://trlxfr.com/admin/data/feeds/sdk/film_plug_prod_v1\r\n    //         // https://glewedtv.com/index.php?api/getmovie\r\n    //         const request= await axios.get('admin/data/feeds/sdk/film_plug_prod_v1');\r\n    //         setBanner(request.data[2])\r\n    //         // listToDisplay=[categories.movies,categories.series]\r\n    //         console.log(banner)\r\n    //         return request;\r\n    //     }\r\n    //     fetchData();\r\n    // },[])\r\n    // // setBanner(banner!=[] && banner.movies[2])\r\n    // // console.log(!banner?.banner.movies[Math.floor((Math.random() * 100) )])\r\n\r\n\r\n    return (\r\n        <Container fluid className=\"banner\">\r\n            <Row className=\"bannerContainer p-0 m-0\">\r\n                <Col md=\"6\" className=\"banner_content\">\r\n                <h1 className=\"banner_title\">Dirty Spring</h1>\r\n                </Col>\r\n                <Col md=\"6\" className=\"p-0 m-0\">\r\n                    <div className=\"banner_img p-0 m-0\">\r\n                     <img src=\"https://i.vimeocdn.com/video/870122089-457485df87e28ef3cd955cd199e7ba0a7813274174b0e9ff01de35b4c9891424-d_960x540?r=pad\" className=\"p-0 m-0\" />\r\n                     </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MovieRow({title ,movie_list}) {\r\n    console.log(movie_list)\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <div className=\"row_posters\">\r\n\r\n                {movie_list.map((movie_list)=>{\r\n                return  <Link key={movie_list.id} to={{pathname:\"/PreviewScreen\", movieDetails:movie_list}}> <img  className=\"row_poster\" key={movie_list.id} src={movie_list.sdPosterUrl} alt={movie_list.title}/> </Link>\r\n                })}\r\n            \r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieRow;\r\n","import React, {useState,useEffect} from 'react'\r\nimport MovieRow from './MovieRow'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction MovieSection() {\r\n    // var listToDisplay=[]\r\n    var result=[];\r\n    var isSeries=false;\r\n    var filtered=[];\r\n    const [categories, setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            // http://trlxfr.com/admin/data/feeds/sdk/film_plug_prod_v1\r\n            // https://glewedtv.com/index.php?api/getmovie\r\n            const request= await axios.get('http://trlxfr.com/admin/data/feeds/sdk/film_plug_prod_v1');\r\n            setCategories(request.data)\r\n            // listToDisplay=[categories.movies,categories.series]\r\n            // console.log(categories.movies.filter(x => x.id === '0510a405f7ef33c91669aa095fddc2fd'));\r\n            // result = categories!=''&& categories.episodes.filter(obj => {\r\n            //     return obj.id === \"1d156325a3ea0a3b7899166367072164\"\r\n            // })\r\n\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[])\r\n            if (categories.episodes) {\r\n                filtered= categories.episodes.filter((item)=>{\r\n                    return item.id===\"d1b1554b130945790d46b94a2ed8d3a2\"\r\n                })\r\n                // console.log(filtered)\r\n            }\r\n            else(\r\n\r\n                console.log(\"world!\")\r\n            )\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"movie_section\">\r\n            {/* {listToDisplay.map(categories=>{\r\n            return <MovieRow key={categories.genre_id}  category_title={categories.genre_name} movie_list={categories.contents}/> \r\n            })} */}\r\n            \r\n            {categories !='' && <MovieRow isSeries title='Movies'  movie_list={categories.movies}/>}\r\n            {categories !='' && <MovieRow isSeries={true} title='Series'  movie_list={categories.series}/>}\r\n\r\n            \r\n\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default MovieSection\r\n","import React from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport Banner from './Banner';\r\nimport MovieSection from './MovieSection';\r\n\r\nfunction MainScreen() {\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Banner />\r\n            </Row>\r\n            <Row>\r\n                <MovieSection/>\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default MainScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport { Container,Row,Col, Button } from 'react-bootstrap'\r\nimport { useLocation } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport bg from './img/banner_img.jpeg'; \r\nimport MovieSection from './MovieSection';\r\nimport MovieRow from './MovieRow';\r\nimport { IoExitOutline, IoPlaySharp  } from \"react-icons/io5\";\r\n\r\nimport axios from 'axios';\r\n\r\nfunction PreviewScreen() {\r\n    const location=useLocation()\r\n    const movieDetails=location.movieDetails;\r\n    var obj\r\n\r\n    function secondsToTime(secs)\r\n{\r\n    var hours = Math.floor(secs / (60 * 60));\r\n\r\n    var divisor_for_minutes = secs % (60 * 60);\r\n    var minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    var divisor_for_seconds = divisor_for_minutes % 60;\r\n    var seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    obj = {\r\n        \"h\": hours,\r\n        \"m\": minutes,\r\n        \"s\": seconds\r\n    };\r\n    return obj;\r\n}\r\n    secondsToTime(movieDetails.length)\r\n\r\n\r\n// Axios call\r\n    var filtered=[];\r\n    const [episodes, setEpisodes]=useState([]);\r\n    var episodeList=movieDetails.episodes;\r\n    var episodeRow=[];\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request= await axios.get('admin/data/feeds/sdk/film_plug_prod_v1');\r\n            setEpisodes(request.data.episodes)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[])\r\n            if (episodes && episodeList) {\r\n\r\n                // episodeRow=episodeList.map((episodeList)=>{\r\n                //     return filtered= episodeList.filter((item)=>{\r\n                //         return item.id===\"d1b1554b130945790d46b94a2ed8d3a2\"\r\n                //     })\r\n                // })\r\n                // console.log(episodeRow)\r\n                episodeRow=episodeList.map((episodeList)=>{\r\n                    return filtered= episodes.filter((item)=>{\r\n                        return item.id===episodeList;\r\n                    })\r\n                })\r\n            }\r\n            else(\r\n\r\n                console.log(\"world!\")\r\n            )\r\n// Axios call ends\r\n\r\n                    \r\n\r\n    return (\r\n        <div>\r\n            {/* PreviewInfo */}\r\n            <Container fluid className=\"preview_container\" style={{backgroundImage:`linear-gradient(to bottom, rgba(245, 246, 252, 0.342), rgba(0, 0, 0, 0.73)), url('${movieDetails.hdPosterUrl}')`,     backgroundPosition: \"center\",\r\n                        backgroundSize:\"cover\",backgroundRepeat: \"no-repeat\"}}>\r\n                <Row className=\"preview_row\">\r\n                    <Col className=\"preview_info\">\r\n                    <h1>\r\n                        {movieDetails.title}\r\n                    </h1>\r\n                    <h3>{obj.h}h {obj.m}min | {movieDetails.genres[0]}</h3>\r\n                    {/* Descriptio */}\r\n                    <h2 > {movieDetails.description}</h2>\r\n                    {!episodeList && <Link to={{pathname:\"/Player\",movieUrl:movieDetails.url}} className=\"play\"><IoPlaySharp className=\"iconPlay\" size={25}/> Play</Link>}\r\n\r\n                    </Col>\r\n                    <Col>\r\n                    \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"previewMovies\">\r\n                {episodeList && <h1>Episodes</h1>}\r\n                    {\r\n                    \r\n                        // console.log(episodeRow)\r\n                        episodes.length>0 && episodeRow.map((episodes)=>{\r\n                                    \r\n                            return  <Link key={episodes[0].id} to={{pathname:\"/Player\", movieUrl:episodes[0].url}}> <img  className=\"row_poster\" key={episodes[0].id} src={episodes[0].sdPosterUrl} alt={episodes[0].title}/> </Link>\r\n\r\n                        })\r\n                    // episodeRow.length>0 && episodeRow.map((movie_list)=>{\r\n                    // return  <Link key={movie_list[0].id} to={{pathname:\"/Player\", movieUrl:movie_list[0].url}}> <img  className=\"row_poster\" key={movie_list[0].id} src={movie_list[0].sdPosterUrl} alt={movie_list[0].title}/> </Link>\r\n                    // })\r\n                    \r\n                    }\r\n\r\n\r\n                </Row>\r\n            </Container>\r\n            {/* MovieRow */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreviewScreen;\r\n","export default __webpack_public_path__ + \"static/media/Logo_FHD.a07417d9.png\";","import React from 'react'\r\nimport logo from \"./img/Logo_FHD.png\"\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"logo\">\r\n            <img src={logo}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport { FaHome ,FaSearch } from 'react-icons/fa';\r\nimport { MdFavorite } from 'react-icons/md';\r\nimport { IoExitOutline } from \"react-icons/io5\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SideBar() {\r\n    return (\r\n  \r\n        <div className=\"sidebar\">\r\n            {/* <header>My App</header> */}\r\n            <ul>\r\n                <li>\r\n                <Link to=\"/\"><FaHome className=\"icons\" size={35}/>Home</Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"#\"><FaSearch className=\"icons\" size={35} />Search</Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"#\"><MdFavorite className=\"icons\" size={35} />Favorites</Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"#\"><IoExitOutline className=\"icons\" size={35} />Exit</Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nfunction Player() {\r\n    const url=useLocation()\r\n    console.log(url)\r\n    return (\r\n        <div>\r\n            <video className=\"video\" autoPlay progress controls src={url.movieUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import './App.css';\nimport { BrowserRouter as Router, Route , Switch } from 'react-router-dom';\nimport {Container,Row, Col} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MainScreen from './MainScreen';\nimport PreviewScreen from './PreviewScreen'\nimport Logo from './Logo';\nimport SideBar from './SideBar';\nimport Player from './Player';\nfunction App() {\n  // $(document).keydown(function(e) {\n  //   console.log(\"hassan\")\n  // }\n  return (\n    // <Router>\n    //   <Switch>\n    //   <Route path=\"/\" exact component={MainScreen}/>\n    //   <Route path=\"/PreviewScreen\" component={PreviewScreen}/>\n    //   </Switch>\n    // </Router>\n\n\n\n    <div className=\"App\">\n      <Container fluid>\n        <Row>\n\n            <Router>\n            <Col md='2' className=\"p-0\">\n            <SideBar/>\n\n            </Col>\n            <Col md='10' className=\"p-0\" style={{position:'relative'}}>\n              <Logo/>\n              <Switch>\n                <Route path=\"/\" exact component={MainScreen}/>\n                <Route path=\"/PreviewScreen\" component={PreviewScreen}/>\n                <Route path=\"/Player\" component={Player}/>\n\n              </Switch>\n             </Col>\n\n            </Router>\n         </Row>\n       </Container>\n     </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}